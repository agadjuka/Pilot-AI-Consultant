from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

import asyncio
from app.services.telegram_service import telegram_service
from app.api.telegram import process_telegram_update
from app.utils.debug_logger import gemini_debug_logger


async def run_polling():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ Long Polling –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
    –í —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ –±–æ—Ç —Å–∞–º –æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç Telegram API –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    """
    print("\n" + "="*60)
    print("   ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ Polling")
    print("="*60)
    
    # –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É —Å debug –ª–æ–≥–∞–º–∏ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ
    gemini_debug_logger.clear_debug_logs()
    
    print("="*60)
    print("   üîÑ –£–¥–∞–ª–µ–Ω–∏–µ webhook...")
    print("="*60)
    
    # –£–¥–∞–ª—è–µ–º webhook, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    # Telegram –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å webhook –∏ polling
    webhook_deleted = await telegram_service.delete_webhook()
    if webhook_deleted:
        print("   ‚úÖ Webhook —É–¥–∞–ª–µ–Ω")
    else:
        print("   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook")
    
    print("   ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    print("="*60 + "\n")
    
    offset = 0
    
    while True:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram
            updates = await telegram_service.get_updates(offset)
            
            if updates:
                print(f"üì© –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(updates)}")
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                for update in updates:
                    print(f"   ‚öôÔ∏è  –û–±—Ä–∞–±–æ—Ç–∫–∞ update_id: {update.update_id}")
                    
                    # –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏
                    await process_telegram_update(update)
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º offset, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ª—É—á–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–Ω–æ–≤–∞
                    offset = update.update_id + 1
                
                print(f"‚úÖ –í—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã\n")
                
        except KeyboardInterrupt:
            print("\n" + "="*60)
            print("   üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
            print("="*60 + "\n")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ polling loop: {e}")
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
            await asyncio.sleep(3)


if __name__ == "__main__":
    try:
        asyncio.run(run_polling())
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")

