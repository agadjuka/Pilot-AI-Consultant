"""
–ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è Telegram API —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ –ë–î.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook'–æ–≤ –∫–æ–≥–¥–∞ –ë–î –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞.
"""
from fastapi import APIRouter, Request, BackgroundTasks
import logging
from app.schemas.telegram import Update
from app.services.telegram_service import telegram_service
from app.services.dialog_service_stub import DialogServiceStub
from app.core.config import settings

# –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è
logger = logging.getLogger(__name__)

router = APIRouter()


async def process_telegram_update_stub(update: Update):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–∞–≥–ª—É—à–µ–∫.
    –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook'–æ–≤.
    """
    logger.info("üîÑ STUB: –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Telegram update (—Ä–µ–∂–∏–º –∑–∞–≥–ª—É—à–∫–∏)")
    logger.info(f"üìã STUB: Update ID: {update.update_id}")
    
    if update.message and update.message.text:
        chat_id = update.message.chat.id
        user_id = update.message.from_user.id if update.message.from_user else chat_id
        text = update.message.text
        
        logger.info(f"üí¨ STUB: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ —á–∞—Ç–µ {chat_id}")
        logger.info(f"üìù STUB: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: '{text}'")
        
        try:
            # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä DialogServiceStub (–±–µ–∑ –ë–î)
            dialog_service = DialogServiceStub()
            logger.info("ü§ñ STUB: DialogServiceStub —Å–æ–∑–¥–∞–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π /clear
            if text.strip().lower() == "/clear":
                logger.info("üßπ STUB: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /clear")
                # –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∑–∞–≥–ª—É—à–∫–∞)
                deleted_count = dialog_service.clear_history(user_id)
                logger.info(f"üóëÔ∏è STUB: –£–¥–∞–ª–µ–Ω–æ {deleted_count} –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ (–∑–∞–≥–ª—É—à–∫–∞)")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
                confirmation_message = (
                    "‚ú® –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!\n\n"
                    "üîß –†–∞–±–æ—Ç–∞–µ–º –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –±–µ–∑ –ë–î\n"
                    "‚úÖ Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
                )
                logger.info("üì§ STUB: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏")
                await telegram_service.send_message(chat_id, confirmation_message)
                logger.info("‚úÖ STUB: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            else:
                logger.info("üí≠ STUB: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –∑–∞–≥–ª—É—à–∫–∏
                bot_response = await dialog_service.process_user_message(user_id, text)
                logger.info(f"ü§ñ STUB: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç –∑–∞–≥–ª—É—à–∫–∏: '{bot_response[:100]}...'")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                logger.info("üì§ STUB: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
                await telegram_service.send_message(chat_id, bot_response)
                logger.info("‚úÖ STUB: –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
                
        except Exception as e:
            logger.error("üí• STUB: –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            error_message = (
                "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n"
                "üîß –†–∞–±–æ—Ç–∞–µ–º –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ\n"
                "‚úÖ Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π"
            )
            logger.info("üì§ STUB: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
            await telegram_service.send_message(chat_id, error_message)
            logger.info("‚úÖ STUB: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            logger.error(f"‚ùå STUB: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            logger.error(f"‚ùå STUB: –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
            import traceback
            logger.error(f"‚ùå STUB: –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞: {traceback.format_exc()}")
    else:
        logger.warning("‚ö†Ô∏è STUB: Update –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
        logger.info(f"üìã STUB: –¢–∏–ø update: {type(update).__name__}")
    
    logger.info("üèÅ STUB: –û–±—Ä–∞–±–æ—Ç–∫–∞ Telegram update –∑–∞–≤–µ—Ä—à–µ–Ω–∞")


@router.post(f"/{settings.TELEGRAM_BOT_TOKEN}", include_in_schema=False)
async def telegram_webhook_stub(request: Request, background_tasks: BackgroundTasks):
    """
    –û—Å–Ω–æ–≤–Ω–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –≤–µ–±—Ö—É–∫–æ–≤ –æ—Ç Telegram —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏.
    –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook'–æ–≤.
    """
    logger.info("üîî STUB: –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç (—Ä–µ–∂–∏–º –∑–∞–≥–ª—É—à–∫–∏)")
    try:
        update_data = await request.json()
        logger.info(f"üì¶ STUB: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã: {update_data}")
        
        update = Update.parse_obj(update_data)
        logger.info(f"‚úÖ STUB: Update –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        background_tasks.add_task(process_telegram_update_stub, update)
        logger.info("üöÄ STUB: –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ñ–æ–Ω–æ–≤—É—é –æ—á–µ—Ä–µ–¥—å")
        
        return {"status": "ok"}
    except Exception as e:
        logger.error(f"‚ùå STUB: –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç–µ: {e}")
        return {"status": "error", "message": str(e)}


@router.post("/webhook", include_in_schema=False)
async def telegram_webhook_generic_stub(request: Request, background_tasks: BackgroundTasks):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –≤–µ–±—Ö—É–∫–æ–≤ –æ—Ç Telegram —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ Telegram –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ /telegram/webhook.
    –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook'–æ–≤.
    """
    logger.info("üîî STUB: –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç /webhook (—Ä–µ–∂–∏–º –∑–∞–≥–ª—É—à–∫–∏)")
    try:
        update_data = await request.json()
        logger.info(f"üì¶ STUB: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —á–µ—Ä–µ–∑ /webhook: {update_data}")
        
        update = Update.parse_obj(update_data)
        logger.info(f"‚úÖ STUB: Update –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ —á–µ—Ä–µ–∑ /webhook")
        
        background_tasks.add_task(process_telegram_update_stub, update)
        logger.info("üöÄ STUB: –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ñ–æ–Ω–æ–≤—É—é –æ—á–µ—Ä–µ–¥—å —á–µ—Ä–µ–∑ /webhook")
        
        return {"status": "ok"}
    except Exception as e:
        logger.error(f"‚ùå STUB: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook —á–µ—Ä–µ–∑ /webhook: {e}")
        return {"status": "error", "message": str(e)}
