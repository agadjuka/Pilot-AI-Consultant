#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω—ã.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ø–∏—Å–∫–æ–≤ –≤ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö –ø–æ–ª—è—Ö.
"""

import requests
import json
import time

# URL —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
BASE_URL = "http://localhost:5000"

def test_get_patterns():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º GET /api/patterns...")
    
    try:
        response = requests.get(f"{BASE_URL}/api/patterns")
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ GET –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
            for stage_name, stage_data in data.items():
                if isinstance(stage_data, dict):
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω—ã –≤ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    if 'thinking_scenario' in stage_data:
                        if isinstance(stage_data['thinking_scenario'], str):
                            print(f"‚úÖ {stage_name}.thinking_scenario - —Å—Ç—Ä–æ–∫–∞ (–¥–ª—è textarea)")
                        else:
                            print(f"‚ùå {stage_name}.thinking_scenario - –Ω–µ —Å—Ç—Ä–æ–∫–∞: {type(stage_data['thinking_scenario'])}")
                    
                    if 'synthesis_scenario' in stage_data:
                        if isinstance(stage_data['synthesis_scenario'], str):
                            print(f"‚úÖ {stage_name}.synthesis_scenario - —Å—Ç—Ä–æ–∫–∞ (–¥–ª—è textarea)")
                        else:
                            print(f"‚ùå {stage_name}.synthesis_scenario - –Ω–µ —Å—Ç—Ä–æ–∫–∞: {type(stage_data['synthesis_scenario'])}")
            
            return data
        else:
            print(f"‚ùå GET –∑–∞–ø—Ä–æ—Å –Ω–µ—É—Å–ø–µ—à–µ–Ω: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ GET –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def test_save_patterns(original_data):
    """–¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤"""
    print("\nüíæ –¢–µ—Å—Ç–∏—Ä—É–µ–º POST /api/patterns...")
    
    if not original_data:
        print("‚ùå –ù–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return False
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    test_data = original_data.copy()
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—É—é —Å—Ç–∞–¥–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    first_stage = list(test_data.keys())[0]
    stage_data = test_data[first_stage]
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    stage_data['thinking_scenario'] = [
        "1. –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è",
        "2. –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è", 
        "3. –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è"
    ]
    stage_data['synthesis_scenario'] = [
        "1. –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–∏–Ω—Ç–µ–∑–∞",
        "2. –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–∏–Ω—Ç–µ–∑–∞"
    ]
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/patterns",
            headers={'Content-Type': 'application/json'},
            json=test_data
        )
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ POST –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω")
                return True
            else:
                print(f"‚ùå POST –∑–∞–ø—Ä–æ—Å –Ω–µ—É—Å–ø–µ—à–µ–Ω: {result}")
                return False
        else:
            print(f"‚ùå POST –∑–∞–ø—Ä–æ—Å –Ω–µ—É—Å–ø–µ—à–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ POST –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def test_roundtrip():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞: –ø–æ–ª—É—á–µ–Ω–∏–µ -> –∏–∑–º–µ–Ω–µ–Ω–∏–µ -> —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ -> –ø–æ–ª—É—á–µ–Ω–∏–µ"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    original_data = test_get_patterns()
    if not original_data:
        return False
    
    # 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    if not test_save_patterns(original_data):
        return False
    
    # 3. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–Ω–æ–≤–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...")
    updated_data = test_get_patterns()
    if not updated_data:
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    first_stage = list(updated_data.keys())[0]
    stage_data = updated_data[first_stage]
    
    thinking_scenario = stage_data.get('thinking_scenario', '')
    synthesis_scenario = stage_data.get('synthesis_scenario', '')
    
    if '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è' in thinking_scenario:
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ thinking_scenario —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ thinking_scenario –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å")
        return False
    
    if '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–∏–Ω—Ç–µ–∑–∞' in synthesis_scenario:
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ synthesis_scenario —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ synthesis_scenario –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å")
        return False
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω—ã")
    print("=" * 50)
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    print("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    time.sleep(2)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        response = requests.get(f"{BASE_URL}/")
        if response.status_code != 200:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
    except:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = test_roundtrip()
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –†–µ–¥–∞–∫—Ç–æ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –ø–æ–ª—è")
    else:
        print("‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
    
    return success

if __name__ == "__main__":
    main()
