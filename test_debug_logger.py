"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã debug –ª–æ–≥–≥–µ—Ä–∞.
"""
import asyncio
from app.utils.debug_logger import gemini_debug_logger


async def test_debug_logger():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –ª–æ–≥–≥–µ—Ä–∞."""
    print("\n" + "="*60)
    print("   üß™ –¢–µ—Å—Ç Debug –õ–æ–≥–≥–µ—Ä–∞")
    print("="*60)
    
    # –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É —Å –ª–æ–≥–∞–º–∏
    gemini_debug_logger.clear_debug_logs()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    system_instruction = "–¢—ã ‚Äî –ö—ç—Ç, AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã."
    
    dialog_history = [
        {"role": "user", "text": "–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞–Ω–∏–∫—é—Ä"},
        {"role": "model", "text": "–ü—Ä–∏–≤–µ—Ç! –° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥—É —Å –∑–∞–ø–∏—Å—å—é. –ö–æ–≥–¥–∞ –≤–∞–º —É–¥–æ–±–Ω–æ?"},
        {"role": "user", "text": "–ó–∞–≤—Ç—Ä–∞ –≤ 15:00"}
    ]
    
    user_message = "–ê —Å–∫–æ–ª—å–∫–æ —ç—Ç–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å?"
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
    print("\nüìù –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...")
    request_num = gemini_debug_logger.log_request(
        user_message=user_message,
        dialog_history=dialog_history,
        system_instruction=system_instruction
    )
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Gemini
    await asyncio.sleep(0.5)
    
    response_text = """–°—Ç–æ–∏–º–æ—Å—Ç—å –º–∞–Ω–∏–∫—é—Ä–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ –ø–æ–∫—Ä—ã—Ç–∏—è:
- –û–±—ã—á–Ω—ã–π –º–∞–Ω–∏–∫—é—Ä: 1000 —Ä—É–±
- –ì–µ–ª—å-–ª–∞–∫: 1500 —Ä—É–±
- –ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ: 2500 —Ä—É–±

–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? üíÖ"""
    
    # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    print("\nüí¨ –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç...")
    gemini_debug_logger.log_response(request_num, response_text)
    
    print("\n" + "="*60)
    print("   ‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("   üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É debug_logs/")
    print("="*60 + "\n")


if __name__ == "__main__":
    asyncio.run(test_debug_logger())

