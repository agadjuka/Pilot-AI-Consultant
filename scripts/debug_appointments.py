"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ appointments.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –∑–∞–ø–∏—Å–∞–ª–æ—Å—å –≤ –±–∞–∑—É –Ω–∞ 20 –æ–∫—Ç—è–±—Ä—è 2025 –≥–æ–¥–∞.
"""

import sys
from datetime import datetime, date

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append('.')

from app.core.database import init_database, execute_query


def check_appointments_on_date(target_date: date):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ü–µ–ª–µ–≤—É—é –¥–∞—Ç—É"""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –Ω–∞ {target_date}")
    print("=" * 60)
    
    date_str = target_date.strftime('%Y-%m-%d')
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ —ç—Ç—É –¥–∞—Ç—É
    query = f"""
        SELECT a.id, a.user_telegram_id, a.master_id, a.service_id, 
               a.start_time, a.end_time, s.name as service_name, m.name as master_name
        FROM appointments a
        JOIN services s ON a.service_id = s.id
        JOIN masters m ON a.master_id = m.id
        WHERE CAST(a.start_time AS Date) = CAST('{date_str}' AS Date)
        ORDER BY a.master_id, a.start_time
    """
    
    try:
        rows = execute_query(query)
        
        if not rows:
            print("‚ùå –ó–∞–ø–∏—Å–µ–π –Ω–∞ —ç—Ç—É –¥–∞—Ç—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(rows)} –∑–∞–ø–∏—Å–µ–π:")
        print()
        
        for row in rows:
            appointment_id, user_id, master_id, service_id, start_time, end_time, service_name, master_name = row
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è
            start_time_str = str(start_time)
            end_time_str = str(end_time)
            
            print(f"üìÖ ID: {appointment_id}")
            print(f"   üë§ –ú–∞—Å—Ç–µ—Ä: {master_name} (ID: {master_id})")
            print(f"   üîß –£—Å–ª—É–≥–∞: {service_name}")
            print(f"   ‚è∞ –í—Ä–µ–º—è: {start_time_str} - {end_time_str}")
            print(f"   üë• –ö–ª–∏–µ–Ω—Ç: {user_id}")
            print()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π: {e}")


def check_master_schedules_on_date(target_date: date, master_ids: list):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥—Ä–∞—Ñ–∏–∫–∏ —Ä–∞–±–æ—Ç—ã –º–∞—Å—Ç–µ—Ä–æ–≤ –Ω–∞ —Ü–µ–ª–µ–≤—É—é –¥–∞—Ç—É"""
    print(f"üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ä–∞–±–æ—Ç—ã –º–∞—Å—Ç–µ—Ä–æ–≤ –Ω–∞ {target_date}")
    print("=" * 60)
    
    date_str = target_date.strftime('%Y-%m-%d')
    master_ids_str = ', '.join(map(str, master_ids))
    
    query = f"""
        SELECT ms.master_id, m.name as master_name, ms.start_time, ms.end_time
        FROM master_schedules ms
        JOIN masters m ON ms.master_id = m.id
        WHERE ms.master_id IN ({master_ids_str})
        AND CAST(ms.date AS Date) = CAST('{date_str}' AS Date)
        ORDER BY ms.master_id
    """
    
    try:
        rows = execute_query(query)
        
        if not rows:
            print("‚ùå –ì—Ä–∞—Ñ–∏–∫–æ–≤ —Ä–∞–±–æ—Ç—ã –Ω–∞ —ç—Ç—É –¥–∞—Ç—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(rows)} –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ä–∞–±–æ—Ç—ã:")
        print()
        
        for row in rows:
            master_id, master_name, start_time, end_time = row
            print(f"üë§ –ú–∞—Å—Ç–µ—Ä: {master_name} (ID: {master_id})")
            print(f"   ‚è∞ –ì—Ä–∞—Ñ–∏–∫: {start_time} - {end_time}")
            print()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤: {e}")


def check_manicure_service():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª—É–≥—É –º–∞–Ω–∏–∫—é—Ä–∞"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª—É–≥–∏ '–ú–∞–Ω–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –≥–µ–ª—å-–ª–∞–∫'")
    print("=" * 60)
    
    query = "SELECT id, name, duration_minutes FROM services WHERE name = '–ú–∞–Ω–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –≥–µ–ª—å-–ª–∞–∫'"
    
    try:
        rows = execute_query(query)
        
        if not rows:
            print("‚ùå –£—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return
        
        service_id, name, duration = rows[0]
        print(f"‚úÖ –£—Å–ª—É–≥–∞ –Ω–∞–π–¥–µ–Ω–∞:")
        print(f"   ID: {service_id}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
        print(f"   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} –º–∏–Ω—É—Ç")
        print()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Å–ª—É–≥–∏: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏"""
    print("üîç –û–¢–õ–ê–î–ö–ê –î–ê–ù–ù–´–• –í –ë–ê–ó–ï")
    print("=" * 60)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ YDB...")
        init_database()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        print()
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
        target_date = date(2025, 10, 20)
        master_ids = [10, 9, 8, 7, 6, 5, 3]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª—É–≥—É
        check_manicure_service()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞—Ñ–∏–∫–∏ —Ä–∞–±–æ—Ç—ã
        check_master_schedules_on_date(target_date, master_ids)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏
        check_appointments_on_date(target_date)
        
        print("=" * 60)
        print("‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ç–ª–∞–¥–∫–∏: {e}")
        raise


if __name__ == "__main__":
    main()
