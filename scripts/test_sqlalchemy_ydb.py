#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ SQLAlchemy + YDB (–∫–∞–∫ –≤ database.py)
"""

import os
import sys
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, project_root)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

from sqlalchemy import create_engine
import ydb

def test_sqlalchemy_ydb_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SQLAlchemy + YDB"""
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ SQLAlchemy + YDB...")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    from app.core.config import settings
    
    endpoint = settings.YDB_ENDPOINT
    database = settings.YDB_DATABASE
    service_account_key_file = os.getenv("YC_SERVICE_ACCOUNT_KEY_FILE", "key.json")
    
    print(f"–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —ç–Ω–¥–ø–æ–∏–Ω—Ç—É: {endpoint}")
    print(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {database}")
    print(f"–ö–ª—é—á —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: {service_account_key_file}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–ª—é—á–∞
    key_file_path = service_account_key_file
    if not os.path.exists(key_file_path):
        project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        key_file_path = os.path.join(project_root, service_account_key_file)
    
    if not os.path.exists(key_file_path):
        print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª –∫–ª—é—á–∞ {service_account_key_file} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
    
    print(f"–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –∫–ª—é—á–∞: {os.path.abspath(key_file_path)}")
    
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        endpoint_clean = endpoint.replace('grpcs://', '').replace('grpc://', '')
        connection_string = f"ydb://{endpoint_clean}/{database}"
        
        # –ü–æ–ª—É—á–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        credentials = ydb.iam.ServiceAccountCredentials.from_file(key_file_path)
        
        # –°–æ–∑–¥–∞–µ–º engine
        engine = create_engine(
            connection_string,
            connect_args={"credentials": credentials}
        )
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        with engine.connect() as connection:
            result = connection.execute("SELECT 1 as test")
            row = result.fetchone()
            print(f"‚úÖ –£–°–ü–ï–•! –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {row[0]}")
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:")
        print(e)

if __name__ == "__main__":
    test_sqlalchemy_ydb_connection()
