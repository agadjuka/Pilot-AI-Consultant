"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –Ω–∞ 20 –æ–∫—Ç—è–±—Ä—è.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø–∏—Å–∏ –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤ –º–∞–Ω–∏–∫—é—Ä–∞.
"""

import sys
from datetime import datetime, date

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append('.')

from app.core.database import init_database
from app.repositories.appointment_repository import AppointmentRepository


def check_specific_masters(target_date: date, master_ids: list):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤"""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤ {master_ids} –Ω–∞ {target_date}")
    print("=" * 60)
    
    try:
        repo = AppointmentRepository()
        
        for master_id in master_ids:
            print(f"\nüë§ –ú–∞—Å—Ç–µ—Ä ID: {master_id}")
            appointments = repo.get_appointments_by_master(master_id, target_date)
            
            if not appointments:
                print("   ‚ùå –ó–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                continue
            
            print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(appointments)} –∑–∞–ø–∏—Å–µ–π:")
            
            for appointment in appointments:
                print(f"      üìÖ ID: {appointment['id']}")
                print(f"         üîß –£—Å–ª—É–≥–∞ ID: {appointment['service_id']}")
                print(f"         ‚è∞ –í—Ä–µ–º—è: {appointment['start_time']} - {appointment['end_time']}")
                print(f"         üë• –ö–ª–∏–µ–Ω—Ç: {appointment['user_telegram_id']}")
                print()
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–ò–°–ï–ô –î–õ–Ø –ú–ê–°–¢–ï–†–û–í –ú–ê–ù–ò–ö–Æ–†–ê")
    print("=" * 60)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ YDB...")
        init_database()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        print()
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
        target_date = date(2025, 10, 20)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –º—ã —Å–æ–∑–¥–∞–≤–∞–ª–∏ –∑–∞–ø–∏—Å–∏
        test_master_ids = [10, 9, 8, 7, 6, 5, 3]
        print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ –∏–∑ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞:")
        check_specific_masters(target_date, test_master_ids)
        
        print("\n" + "=" * 60)
        print("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤ –º–∞–Ω–∏–∫—é—Ä–∞:")
        real_manicure_masters = [7, 9, 10]  # –û–∫—Ç—è–±—Ä–∏–Ω–∞, –ê–∫—É–ª–∏–Ω–∞, –ü—Ä–∞—Å–∫–æ–≤—å—è
        check_specific_masters(target_date, real_manicure_masters)
        
        print("=" * 60)
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        raise


if __name__ == "__main__":
    main()
