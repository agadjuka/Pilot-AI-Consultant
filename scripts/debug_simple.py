"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ appointments.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –∑–∞–ø–∏—Å–∞–ª–æ—Å—å –≤ –±–∞–∑—É –Ω–∞ 20 –æ–∫—Ç—è–±—Ä—è 2025 –≥–æ–¥–∞.
"""

import sys
from datetime import datetime, date

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append('.')

from app.core.database import init_database, execute_query


def check_appointments_simple(target_date: date):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ü–µ–ª–µ–≤—É—é –¥–∞—Ç—É –ø—Ä–æ—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º"""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –Ω–∞ {target_date}")
    print("=" * 60)
    
    date_str = target_date.strftime('%Y-%m-%d')
    
    # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ JOIN
    query = f"""
        SELECT id, user_telegram_id, master_id, service_id, start_time, end_time
        FROM appointments
        WHERE CAST(start_time AS Date) = CAST('{date_str}' AS Date)
        ORDER BY master_id, start_time
    """
    
    try:
        rows = execute_query(query)
        
        if not rows:
            print("‚ùå –ó–∞–ø–∏—Å–µ–π –Ω–∞ —ç—Ç—É –¥–∞—Ç—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(rows)} –∑–∞–ø–∏—Å–µ–π:")
        print()
        
        for row in rows:
            appointment_id, user_id, master_id, service_id, start_time, end_time = row
            
            print(f"üìÖ ID: {appointment_id}")
            print(f"   üë§ –ú–∞—Å—Ç–µ—Ä ID: {master_id}")
            print(f"   üîß –£—Å–ª—É–≥–∞ ID: {service_id}")
            print(f"   ‚è∞ –í—Ä–µ–º—è: {start_time} - {end_time}")
            print(f"   üë• –ö–ª–∏–µ–Ω—Ç: {user_id}")
            print()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π: {e}")


def check_services():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —É—Å–ª—É–≥–∏"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª—É–≥")
    print("=" * 60)
    
    query = "SELECT id, name, duration_minutes FROM services ORDER BY id"
    
    try:
        rows = execute_query(query)
        
        if not rows:
            print("‚ùå –£—Å–ª—É–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(rows)} —É—Å–ª—É–≥:")
        print()
        
        for row in rows:
            service_id, name, duration = row
            print(f"üîß ID: {service_id}, –ù–∞–∑–≤–∞–Ω–∏–µ: {name}, –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} –º–∏–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Å–ª—É–≥: {e}")


def check_masters():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ—Ö –º–∞—Å—Ç–µ—Ä–æ–≤"""
    print("üë§ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤")
    print("=" * 60)
    
    query = "SELECT id, name, specialization FROM masters ORDER BY id"
    
    try:
        rows = execute_query(query)
        
        if not rows:
            print("‚ùå –ú–∞—Å—Ç–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(rows)} –º–∞—Å—Ç–µ—Ä–æ–≤:")
        print()
        
        for row in rows:
            master_id, name, specialization = row
            print(f"üë§ ID: {master_id}, –ò–º—è: {name}, –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {specialization}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏"""
    print("üîç –ü–†–û–°–¢–ê–Ø –û–¢–õ–ê–î–ö–ê –î–ê–ù–ù–´–• –í –ë–ê–ó–ï")
    print("=" * 60)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ YDB...")
        init_database()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        print()
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
        target_date = date(2025, 10, 20)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª—É–≥–∏
        check_services()
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤
        check_masters()
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏
        check_appointments_simple(target_date)
        
        print("=" * 60)
        print("‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ç–ª–∞–¥–∫–∏: {e}")
        raise


if __name__ == "__main__":
    main()
