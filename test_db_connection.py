#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ YDB —Å fallback –º–µ—Ö–∞–Ω–∏–∑–º–æ–º.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ç—Ä–∏ —Å–ø–æ—Å–æ–±–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π, —á–µ—Ä–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á.
"""

import logging
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'app'))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

logger = logging.getLogger(__name__)

def test_database_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    try:
        logger.info("üß™ –¢–ï–°–¢: –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ YDB...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        from app.core.database import get_driver, init_database
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        logger.info("üß™ –¢–ï–°–¢: –¢–µ—Å—Ç–∏—Ä—É–µ–º get_driver()...")
        driver = get_driver()
        logger.info("‚úÖ –¢–ï–°–¢: get_driver() –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        logger.info("üß™ –¢–ï–°–¢: –¢–µ—Å—Ç–∏—Ä—É–µ–º init_database()...")
        init_database()
        logger.info("‚úÖ –¢–ï–°–¢: init_database() –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        logger.info("üß™ –¢–ï–°–¢: –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å...")
        from app.core.database import execute_query
        
        try:
            result = execute_query("SELECT COUNT(*) as count FROM services")
            logger.info(f"‚úÖ –¢–ï–°–¢: –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, –Ω–∞–π–¥–µ–Ω–æ {result[0][0]} —É—Å–ª—É–≥")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –¢–ï–°–¢: –ó–∞–ø—Ä–æ—Å –∫ —Ç–∞–±–ª–∏—Ü–µ services –Ω–µ —É–¥–∞–ª—Å—è: {e}")
            # –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        
        logger.info("üéâ –¢–ï–°–¢: –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –¢–ï–°–¢: –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        logger.error(f"‚ùå –¢–ï–°–¢: –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        return False

def test_fallback_scenarios():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ fallback."""
    logger.info("üß™ –¢–ï–°–¢: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ fallback...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –∫–ª—é—á–∞
    key_file = "key.json"
    if os.path.exists(key_file):
        logger.info(f"‚úÖ –¢–ï–°–¢: –§–∞–π–ª –∫–ª—é—á–∞ {key_file} –Ω–∞–π–¥–µ–Ω")
    else:
        logger.warning(f"‚ö†Ô∏è –¢–ï–°–¢: –§–∞–π–ª –∫–ª—é—á–∞ {key.json} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    ydb_endpoint = os.getenv("YDB_ENDPOINT")
    ydb_database = os.getenv("YDB_DATABASE")
    yc_key_file = os.getenv("YC_SERVICE_ACCOUNT_KEY_FILE")
    
    logger.info(f"üîß –¢–ï–°–¢: YDB_ENDPOINT = {ydb_endpoint}")
    logger.info(f"üîß –¢–ï–°–¢: YDB_DATABASE = {ydb_database}")
    logger.info(f"üîß –¢–ï–°–¢: YC_SERVICE_ACCOUNT_KEY_FILE = {yc_key_file}")

if __name__ == "__main__":
    logger.info("=" * 60)
    logger.info("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö YDB")
    logger.info("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ fallback
    test_fallback_scenarios()
    
    logger.info("-" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    success = test_database_connection()
    
    logger.info("=" * 60)
    if success:
        logger.info("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        sys.exit(0)
    else:
        logger.error("‚ùå –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ò–õ–ò–°–¨ –° –û–®–ò–ë–ö–ê–ú–ò!")
        sys.exit(1)
